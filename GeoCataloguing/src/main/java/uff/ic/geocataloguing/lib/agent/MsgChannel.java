/* Generated by Together */

package uff.ic.geocataloguing.lib.agent;

import java.util.ArrayList;
import java.util.HashMap;

/**
 * @author Luiz Andr�
 * @version 1.0
 * @since 1.0
 * @alias MsgChannel*/
public class MsgChannel {

	public MsgChannel() {
		messages = new ArrayList();
		threadState = new HashMap();
	}

	/**
	 * Adiciona mensagem � caixa de entrada.
	 * 
	 * @version 1.0
	 * @since 1.0
	 * @param msg
	 *            mensagem
	 */
	public synchronized void putMessage(Message msg) {
		messages.add(msg);
		notifyAll();
	}

	public synchronized Message getMessage(Message type)
			throws InterruptedException {
		Message msg = null;
		int i = 0;
		do {
			while (msg == null && i < messages.size()) {
				if (messages.get(i).getClass().equals(type.getClass())) {
					msg = (Message) messages.remove(i);
				}
				i++;
			}
			if (msg == null) {
				threadState.put(new Long(Thread.currentThread().getId()), type);
				wait();
				type = (Message) threadState.remove(new Long(Thread
						.currentThread().getId()));
				i = 0;
			}
		} while (msg == null);
		return msg;
	}

	/**
	 * @associates <{Message}>
	 * @supplierCardinality 0..*
	 * @link aggregation
	 * @label contains
	 * @labelDirection forward*/
	private ArrayList messages = null;

	private HashMap threadState = null;
}
