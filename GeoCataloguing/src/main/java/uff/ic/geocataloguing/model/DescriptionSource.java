/* Generated by Together */

package uff.ic.geocataloguing.model;

import java.io.IOException;
import java.io.Serializable;
import java.util.HashMap;

import javax.xml.parsers.ParserConfigurationException;

import org.xml.sax.SAXException;

import uff.ic.geocataloguing.CustomFactory;

/**
 * @version 1.0
 * @since 1.0
 * @author Luiz Andrï¿½
 * @alias DescriptionSource
 * @stereotype abstract*/
abstract public class DescriptionSource implements Serializable {
	public DescriptionSource(String url) {
		this.url = url;
	}

	/**
	 * @return Returns the url.
	 */
	public String getUrl() {
		return url;
	}

	/**
	 * @link
	 * @associates <{Builder}>*/
	public abstract Builder getBuilder();

	public abstract DatasetDescription getDescription(Object obj)
			throws IOException, InvalidDatasetDescException,
			ParserConfigurationException, SAXException;

	private String url = null;

	/**
	 * @link aggregation
	 * @associates <{Parser}>
	 * @supplierCardinality 1..*
	 * @label decodes metadata elements using
	 * @labelDirection forward*/
	transient private HashMap parsers = null;
	transient private FrameworkFactory factory = null;

	/**
	 * @return Returns the factory.
	 */
	public FrameworkFactory getFactory() {
		if (factory == null)
			factory = new CustomFactory();
		return this.factory;
	}

	/**
	 * @return Returns the parsers.
	 */
	public HashMap getParsers() {
		if (parsers == null)
			this.parsers = (getFactory().createParsers(getBuilder()));
		return this.parsers;
	}
}
