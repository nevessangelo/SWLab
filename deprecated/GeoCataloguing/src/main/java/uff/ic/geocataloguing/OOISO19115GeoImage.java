/* Generated by Together */

package uff.ic.geocataloguing;

import iso.GM_Point;
import iso.iso19115.metadata.MD_Metadata;
import iso.iso19115.spatial_representation.MD_Georectified;
import iso.iso19139.dataset.DS_Aggregate;
import iso.iso19139.dataset.DS_DataSet;
import iso.iso19139.dataset.DS_OtherAggregate;

import java.io.Serializable;

import uff.ic.geocataloguing.model.DatasetDescription;

/**
 * @author Luiz Andrï¿½
 * @version 1.0
 * @since 1.0
 * @alias ISO19115GeoImage*/
public class OOISO19115GeoImage extends GeoImageDesc implements Serializable {
	private static final long serialVersionUID = 150818206957778964L;

	/**
	 * @label manipulates
	 * @labelDirection forward*/
	private DS_Aggregate ds_Aggregate = null;

	public OOISO19115GeoImage() {
		ds_Aggregate = new DS_OtherAggregate();
		ds_Aggregate.composedOf = new DS_DataSet[1];
		ds_Aggregate.composedOf[0] = new DS_DataSet();
		ds_Aggregate.seriesMetadata = new MD_Metadata[1];
		ds_Aggregate.seriesMetadata[0] = new MD_Metadata();
		ds_Aggregate.composedOf[0].has = new MD_Metadata[1];
		ds_Aggregate.composedOf[0].has[0] = new MD_Metadata();
		ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo = new MD_Georectified[1];
		ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0] = new MD_Georectified();
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints = new GM_Point[4];
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[0] = new GM_Point();
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[1] = new GM_Point();
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[2] = new GM_Point();
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[3] = new GM_Point();
	}

	public void setUri(String uri) {
		super.setUri(uri);
		ds_Aggregate.composedOf[0].has[0].dataSetURI = uri;
	}

	public String getUri() {
		return super.getUri();
	}

	public void setIdentifier(String fileIdentifier) {
		super.setIdentifier(fileIdentifier);
		ds_Aggregate.composedOf[0].has[0].fileIdentifier = fileIdentifier;
	}

	public String getIdentifier() {
		return super.getIdentifier();
	}

	public void setName(String name) {
		ds_Aggregate.composedOf[0].has[0].metadataStandardName = name;
	}

	public String getName() {
		return ds_Aggregate.composedOf[0].has[0].metadataStandardName;
	}

	public void setLeftUpperCornerPoint(double x, double y) {
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[0].x = x;
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[0].y = y;
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[3].x = x;
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[1].y = y;
	}

	public void setLeftUpperCornerPointX(double x) { // TODO
	}

	public void setLeftUpperCornerPointY(double y) { // TODO
	}

	public double getLeftUpperCornerPointX() {
		return 0;
	}

	public double getLeftUpperCornerPointY() {
		return 0;
	}

	public double getCornerPointsX(int index) {
		return ((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[index].x;
	}

	public void setRightLowerCornerPoint(double x, double y) {
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[2].x = x;
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[2].y = y;
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[1].x = x;
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[3].y = y;
	}

	public void setRightLowerCornerPointX(double x) { // TODO
	}

	public void setRightLowerCornerPointY(double y) { // TODO
	}

	public double getRightLowerCornerPointX() {
		return 0;
	}

	public double getRightLowerCornerPointY() {
		return 0;
	}

	public double getCornerPointsY(int index) {
		return ((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[index].y;
	}

	public void incrementDatasetCapacity() {
		DS_DataSet[] ds_DataSet = ds_Aggregate.composedOf;
		int lengthThis = ds_Aggregate.composedOf.length;
		ds_Aggregate.composedOf = new DS_DataSet[lengthThis + 1];
		ds_Aggregate.composedOf[0] = new DS_DataSet();
		ds_Aggregate.composedOf[0].has = new MD_Metadata[1];
		ds_Aggregate.composedOf[0].has[0] = new MD_Metadata();
		ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo = new MD_Georectified[1];
		ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0] = new MD_Georectified();
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints = new GM_Point[4];
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[0] = new GM_Point();
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[1] = new GM_Point();
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[2] = new GM_Point();
		((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[3] = new GM_Point();
		for (int i = 1; i < lengthThis + 1; i++)
			ds_Aggregate.composedOf[i] = ds_DataSet[i - 1];
	}

	public void aggregateDescription(DatasetDescription datasetDescription) {
		GeoImageInterface features = (GeoImageInterface) datasetDescription;
		DS_DataSet[] ds_DataSet = ds_Aggregate.composedOf;
		int lengthThis = ds_DataSet.length;
		int lengthFeatures = features.getDataSets().length;
		ds_Aggregate.composedOf = new DS_DataSet[lengthThis + lengthFeatures];

		for (int i = 0; i < lengthThis; i++)
			ds_Aggregate.composedOf[i] = ds_DataSet[i];
		for (int i = ds_DataSet.length; i < lengthThis + lengthFeatures; i++)
			ds_Aggregate.composedOf[i] = features.getDataSets()[i - lengthThis];
	}

	public DS_DataSet[] getDataSets() {
		return ds_Aggregate.composedOf;
	}

	public String getDataset() {
		String result = null;
		result += "<identifier>" + super.getIdentifier() + "</identifier>";
		result += "<bounding-box>";
		result += "<gml:coord>";
		result += "<gml:X>"
				+ ((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[0].x
				+ "</gml:X>";
		result += "<gml:Y>"
				+ ((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[0].y
				+ "</gml:Y>";
		result += "</gml:coord>";
		result += "<gml:coord>";
		result += "<gml:X>"
				+ ((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[2].x
				+ "</gml:X>";
		result += "<gml:Y>"
				+ ((MD_Georectified) ds_Aggregate.composedOf[0].has[0].spatialRepresentationInfo[0]).cornerPoints[2].y
				+ "</gml:Y>";
		result += "</gml:coord>";
		result += "</bounding-box>";
		return result;
	}
}
